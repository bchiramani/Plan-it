{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { User } from '../models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.endpoint = 'auth';\n    }\n    logIn(email, password) {\n      return this.http.post(`${environment.apiUrl}/${this.endpoint}/login`, new User(email, password));\n    }\n    signUp(email, password, companyName, serviceType, phoneNumber, description, logo, role) {\n      return this.http.post(`${environment.apiUrl}/${this.endpoint}/signup`, new User(email, password, companyName, serviceType, phoneNumber, description, logo, role));\n    }\n    setSession(authResult) {\n      //const expiresAt = moment().add(authResult.expiresIn,'second');\n      localStorage.setItem('id_token', authResult);\n      //localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n    }\n\n    logout() {\n      localStorage.removeItem(\"id_token\");\n      //localStorage.removeItem(\"expires_at\");\n    }\n\n    isLoggedIn() {\n      if (localStorage.getItem(\"id_token\") === null) {\n        return false;\n      }\n      return true;\n    }\n    isLoggedOut() {\n      return !this.isLoggedIn();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
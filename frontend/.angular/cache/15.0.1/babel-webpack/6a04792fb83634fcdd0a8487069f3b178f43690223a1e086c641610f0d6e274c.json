{"ast":null,"code":"import { Post } from '../models/Post';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostService = /*#__PURE__*/(() => {\n  class PostService {\n    constructor(http) {\n      this.http = http;\n      this._subject = new BehaviorSubject(null);\n      this.subject$ = this._subject.asObservable();\n      this.endpoint = 'post';\n      this.posts = [\n        // {id:0, userId:3, description:\"Post number 0\", image:\"../assets/img/team-1.jpg\",  date : \"01/02/2000\"}, \n        // {id:1, userId:3, description:\"Post number 1\", image:\"../assets/img/team-1.jpg\",  date : \"01/02/2000\"},\n        // {id:2,userId:3,description:\"Post number 2\", image:\"../assets/img/team-1.jpg\" ,  date : \"01/02/2000\"},\n        // {id:3,userId:2,description:\"Post number 3\",image:\"../assets/img/team-1.jpg\", date : \"01/02/2000\"},\n        // {id:4,userId:10,description:\"Post number 4\",image:\"../assets/img/team-1.jpg\", date : \"01/02/2000\"},\n      ];\n    }\n    addPost(user, description, image) {\n      console.log(\"we are now at sprovider service !\", user);\n      return this.http.post(`http://localhost:3000/post/addPost`, new Post(user, description, image, \"date\"));\n    }\n    getAllPosts() {\n      let posts = this.http.get(`http://localhost:3000/post`);\n      console.log(\"at post service , posts are : \", posts);\n      return posts;\n    }\n    getPostsBySProvider(userId) {\n      return this.http.get(`${environment.apiUrl}/${this.endpoint}/${userId}`);\n    }\n  }\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}